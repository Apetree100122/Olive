{
    "workflow_id": "testllama2",
    "azureml_client": {
        "subscription_id": "3905431d-c062-4c17-8fd9-c51f89f334c4",
        "resource_group": "olive",
        "workspace_name": "olive-aml-workspace",
        "keyvault_name" : "olive-keyvault",
        "default_auth_params": {
            "exclude_managed_identity_credential": false
        }
    },
    "input_model": {
        "type": "HfModel",
        "model_path": "meta-llama/Llama-2-7b-hf",
        "load_kwargs": { "attn_implementation": "eager" },
	"io_config": {
            "input_names": [ "input_ids", "attention_mask", "position_ids" ],
            "output_names": [ "logits" ],
            "input_shapes": [ [ 2, 8 ], [ 2, 8 ], [ 2, 8 ] ],
            "input_types": [ "int64", "int64", "int64" ],
            "dynamic_axes": {
                "input_ids": { "0": "batch_size", "1": "sequence_length" },
                "attention_mask": { "0": "batch_size", "1": "total_sequence_length" },
                "position_ids": { "0": "batch_size", "1": "sequence_length" }
            },
	    "kv_cache": true
        }
    },
    "systems": {
        "local_system": {
            "type": "LocalSystem",
            "accelerators": [ { "device": "gpu", "execution_providers": [ "CUDAExecutionProvider" ] } ]
        },
        "aml_system": {
            "type": "AzureML",
            "accelerators": [{"device": "GPU", "execution_providers": ["CUDAExecutionProvider"]}],
            "aml_compute": "v800",
            "aml_docker_config": {
                "base_image": "mcr.microsoft.com/azureml/openmpi4.1.0-cuda11.8-cudnn8-ubuntu22.04",
                "conda_file_path": "conda_gpu.yaml"
            },
            "datastores": "oliveworkflowartifacts",
            "hf_token": true,
            "is_dev": true
        }
    },
    "data_configs": [
        {
            "name": "tiny_codes_train",
            "type": "HuggingfaceContainer",
            "user_script": "user_script.py",
            "load_dataset_config": {
                "type": "tiny_code_dataset",
                "data_name": "nampdn-ai/tiny-codes",
                "split": "train",
                "language": "Python",
                "token": true
            },
            "pre_process_data_config": {
                "text_template": "### Question: {prompt} \n### Answer: {response}"
            }
        },
        {
            "name": "transformer_prompt_dummy_data",
            "type": "TransformersPromptDummyDataContainer"
        }
    ],
    "evaluators": {
        "merged_evaluator": {
            "metrics": [
                {
                    "name": "onnx_merged_latency",
                    "type": "latency",
                    "sub_types": [ { "name": "avg", "priority": 1 } ],
                    "data_config": "transformer_prompt_dummy_data",
                    "user_config": { "io_bind": true }
                }
            ]
        }
    },
    "passes": {
        "lora": {
            "type": "LoRA",
            "lora_dropout": 0.1,
            "train_data_config": "tiny_codes_train",
            "eval_dataset_size": 64,
	    "torch_dtype": "float32",
            "training_args": {
                "per_device_train_batch_size": 2,
                "per_device_eval_batch_size": 2,
                "gradient_accumulation_steps": 1,
                "max_steps": 5,
                "logging_steps": 1,
                "save_steps": 1,
                "evaluation_strategy": "steps",
                "adam_beta2": 0.999,
                "max_grad_norm": 0.3,
                "load_best_model_at_end": true,
                "output_dir": "models/lora-checkpoints"
            }
        },
	"4bit_awq_quantizer": { 
	    "type": "AutoAWQQuantizer", 
	    "pack_model_for_onnx_conversion": true, 
	    "input_model_dtype": "fp32"
	},
        "conversion": {
            "type": "OnnxConversion",
            "target_opset": 17,
	    "device": "cuda",
            "save_as_external_data": true,
            "all_tensors_to_one_file": true
        },
	"transformers_optimization": {
            "type": "OrtTransformersOptimization",
            "save_as_external_data": true,
            "all_tensors_to_one_file": true,
            "model_type": "gpt2",
            "opt_level": 0,
            "only_onnxruntime": false,
            "keep_io_types": false,
            "float16": true
        }
    },
    "evaluator": "merged_evaluator",
    "host": "local_system",
    "target": "local_system",
    "cache_dir": "cache",
    "output_dir": "models/tiny-codes-lora"
}
